import sys
# sys.stdin = open('input.txt')
input = sys.stdin.readline

"""
# 1, 2, 3 더하기 8 (15993)
 1. 정수 n이 주어졌을 때 n을 1, 2, 3의 합으로 나타낼 수 있고 수를 1개 이상 사용해야 함
[입력]
 1. T: 테스트 케이스
 2. n: 합을 나타내야 할 정수
[출력]
 1. n을 나타날 때 사용한 수의 개수가 홀수인 방법의 수, 짝수인 방법의 수를 공백으로 구분
 2. 방법의 수는 1,000,000,009로 나눈 나머지로 출력해야 함
"""

"""
<풀이>
 1. dp
1: [1] 
   (홀: 1, 짝: 0)
2: [1 + 1], 
   [2] 
   (홀: 1, 짝: 1)
3: [1 + 1 + 1], 
   [1 + 2], [2 + 1], 
   [3] 
   (홀: 2, 짝: 2)
4: (홀: 3, 짝: 4)
5: [1 + 1 + 1 + 1 + 1], 
   [1 + 1 + 1 + 2], [1 + 1 + 2 + 1], [1 + 2 + 1 + 1], [2 + 1 + 1 + 1],
   [1 + 1 + 3], [1 + 3 + 1], [3 + 1 + 1], [2 + 2 + 1], [2 + 1 + 2], [1 + 2 + 2],
   [2 + 3], [3 + 2]
   (홀: 7, 짝: 6]
짝[i] = 홀[i - 1] + 홀[i - 2] + 홀[i - 3]
홀[i] = 짝[i - 1] + 짝[i - 2] + 짝[i - 3]
"""
REMAIN = 1000000009

# dp[홀, 짝]
dp = [[0, 0] for _ in range(100001)]
# 1, 2, 3 값 지정
dp[1] = [1, 0]
dp[2] = [1, 1]
dp[3] = [2, 2]
# 나머지 지정
for i in range(4, 100001):
    # 짝수 = 이전 홀수 3개의 합
    dp[i][1] = (dp[i - 1][0] + dp[i - 2][0] + dp[i - 3][0]) % REMAIN
    # 홀수 = 이전 짝수 3개의 합
    dp[i][0] = (dp[i - 1][1] + dp[i - 2][1] + dp[i - 3][1]) % REMAIN

T = int(input())
for tc in range(1, T + 1):
    # 정수 n
    n = int(input())

    print(dp[n][0], dp[n][1])
